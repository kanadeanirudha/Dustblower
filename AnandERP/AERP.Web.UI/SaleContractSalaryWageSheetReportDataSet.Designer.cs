//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace AERP.Web.UI {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SaleContractSalaryWageSheetReportDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SaleContractSalaryWageSheetReportDataSet : global::System.Data.DataSet {
        
        private TBL_SaleContractSalaryWageSheetReportDataTable tableTBL_SaleContractSalaryWageSheetReport;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SaleContractSalaryWageSheetReportDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected SaleContractSalaryWageSheetReportDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TBL_SaleContractSalaryWageSheetReport"] != null)) {
                    base.Tables.Add(new TBL_SaleContractSalaryWageSheetReportDataTable(ds.Tables["TBL_SaleContractSalaryWageSheetReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBL_SaleContractSalaryWageSheetReportDataTable TBL_SaleContractSalaryWageSheetReport {
            get {
                return this.tableTBL_SaleContractSalaryWageSheetReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            SaleContractSalaryWageSheetReportDataSet cln = ((SaleContractSalaryWageSheetReportDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TBL_SaleContractSalaryWageSheetReport"] != null)) {
                    base.Tables.Add(new TBL_SaleContractSalaryWageSheetReportDataTable(ds.Tables["TBL_SaleContractSalaryWageSheetReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableTBL_SaleContractSalaryWageSheetReport = ((TBL_SaleContractSalaryWageSheetReportDataTable)(base.Tables["TBL_SaleContractSalaryWageSheetReport"]));
            if ((initTable == true)) {
                if ((this.tableTBL_SaleContractSalaryWageSheetReport != null)) {
                    this.tableTBL_SaleContractSalaryWageSheetReport.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "SaleContractSalaryWageSheetReportDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SaleContractSalaryWageSheetReportDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTBL_SaleContractSalaryWageSheetReport = new TBL_SaleContractSalaryWageSheetReportDataTable();
            base.Tables.Add(this.tableTBL_SaleContractSalaryWageSheetReport);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTBL_SaleContractSalaryWageSheetReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SaleContractSalaryWageSheetReportDataSet ds = new SaleContractSalaryWageSheetReportDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TBL_SaleContractSalaryWageSheetReportRowChangeEventHandler(object sender, TBL_SaleContractSalaryWageSheetReportRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBL_SaleContractSalaryWageSheetReportDataTable : global::System.Data.TypedTableBase<TBL_SaleContractSalaryWageSheetReportRow> {
            
            private global::System.Data.DataColumn columnSaleContractEmployeeMasterName;
            
            private global::System.Data.DataColumn columnActualBasicAmount;
            
            private global::System.Data.DataColumn columnActualDA;
            
            private global::System.Data.DataColumn columnActualHRA;
            
            private global::System.Data.DataColumn columnActualConveyance;
            
            private global::System.Data.DataColumn columnActualEducation;
            
            private global::System.Data.DataColumn columnActualWashing;
            
            private global::System.Data.DataColumn columnActualGrossAmount;
            
            private global::System.Data.DataColumn columnDaysInMonth;
            
            private global::System.Data.DataColumn columnTotalWeeklyOffDays;
            
            private global::System.Data.DataColumn columnAbsentDays;
            
            private global::System.Data.DataColumn columnTotalAttendance;
            
            private global::System.Data.DataColumn columnAdjustedBasicAmount;
            
            private global::System.Data.DataColumn columnEDA;
            
            private global::System.Data.DataColumn columnEHRA;
            
            private global::System.Data.DataColumn columnEConveyance;
            
            private global::System.Data.DataColumn columnEEducation;
            
            private global::System.Data.DataColumn columnESICGrossAmount;
            
            private global::System.Data.DataColumn columnEWashing;
            
            private global::System.Data.DataColumn columnBonus;
            
            private global::System.Data.DataColumn columnLWW;
            
            private global::System.Data.DataColumn columnGrossForESICCal;
            
            private global::System.Data.DataColumn columnEPF;
            
            private global::System.Data.DataColumn columnEESIC;
            
            private global::System.Data.DataColumn columnCanteen;
            
            private global::System.Data.DataColumn columnPT;
            
            private global::System.Data.DataColumn columnTotalDeduction;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnOTRate;
            
            private global::System.Data.DataColumn columnSingleOvertimeHours;
            
            private global::System.Data.DataColumn columnDoubleOvertimeHours;
            
            private global::System.Data.DataColumn columnGrossOTWages;
            
            private global::System.Data.DataColumn columnNetOTWagesPayable;
            
            private global::System.Data.DataColumn columnTotalWagesPaybleBeforeDeduction;
            
            private global::System.Data.DataColumn columnEmployerPF;
            
            private global::System.Data.DataColumn columnEmployerESIC;
            
            private global::System.Data.DataColumn columnInsurance;
            
            private global::System.Data.DataColumn columnMLWF;
            
            private global::System.Data.DataColumn columnUAS;
            
            private global::System.Data.DataColumn columnTotalSalary;
            
            private global::System.Data.DataColumn columnServiceCharges;
            
            private global::System.Data.DataColumn columnMobileCharges;
            
            private global::System.Data.DataColumn columnGrandTotal;
            
            private global::System.Data.DataColumn columnManagementFees;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_SaleContractSalaryWageSheetReportDataTable() {
                this.TableName = "TBL_SaleContractSalaryWageSheetReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_SaleContractSalaryWageSheetReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TBL_SaleContractSalaryWageSheetReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SaleContractEmployeeMasterNameColumn {
                get {
                    return this.columnSaleContractEmployeeMasterName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ActualBasicAmountColumn {
                get {
                    return this.columnActualBasicAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ActualDAColumn {
                get {
                    return this.columnActualDA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ActualHRAColumn {
                get {
                    return this.columnActualHRA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ActualConveyanceColumn {
                get {
                    return this.columnActualConveyance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ActualEducationColumn {
                get {
                    return this.columnActualEducation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ActualWashingColumn {
                get {
                    return this.columnActualWashing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ActualGrossAmountColumn {
                get {
                    return this.columnActualGrossAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DaysInMonthColumn {
                get {
                    return this.columnDaysInMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalWeeklyOffDaysColumn {
                get {
                    return this.columnTotalWeeklyOffDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AbsentDaysColumn {
                get {
                    return this.columnAbsentDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalAttendanceColumn {
                get {
                    return this.columnTotalAttendance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AdjustedBasicAmountColumn {
                get {
                    return this.columnAdjustedBasicAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EDAColumn {
                get {
                    return this.columnEDA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EHRAColumn {
                get {
                    return this.columnEHRA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EConveyanceColumn {
                get {
                    return this.columnEConveyance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EEducationColumn {
                get {
                    return this.columnEEducation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ESICGrossAmountColumn {
                get {
                    return this.columnESICGrossAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EWashingColumn {
                get {
                    return this.columnEWashing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BonusColumn {
                get {
                    return this.columnBonus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LWWColumn {
                get {
                    return this.columnLWW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GrossForESICCalColumn {
                get {
                    return this.columnGrossForESICCal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EPFColumn {
                get {
                    return this.columnEPF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EESICColumn {
                get {
                    return this.columnEESIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CanteenColumn {
                get {
                    return this.columnCanteen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PTColumn {
                get {
                    return this.columnPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalDeductionColumn {
                get {
                    return this.columnTotalDeduction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OTRateColumn {
                get {
                    return this.columnOTRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SingleOvertimeHoursColumn {
                get {
                    return this.columnSingleOvertimeHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DoubleOvertimeHoursColumn {
                get {
                    return this.columnDoubleOvertimeHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GrossOTWagesColumn {
                get {
                    return this.columnGrossOTWages;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NetOTWagesPayableColumn {
                get {
                    return this.columnNetOTWagesPayable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalWagesPaybleBeforeDeductionColumn {
                get {
                    return this.columnTotalWagesPaybleBeforeDeduction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EmployerPFColumn {
                get {
                    return this.columnEmployerPF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EmployerESICColumn {
                get {
                    return this.columnEmployerESIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InsuranceColumn {
                get {
                    return this.columnInsurance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MLWFColumn {
                get {
                    return this.columnMLWF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UASColumn {
                get {
                    return this.columnUAS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalSalaryColumn {
                get {
                    return this.columnTotalSalary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ServiceChargesColumn {
                get {
                    return this.columnServiceCharges;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MobileChargesColumn {
                get {
                    return this.columnMobileCharges;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GrandTotalColumn {
                get {
                    return this.columnGrandTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ManagementFeesColumn {
                get {
                    return this.columnManagementFees;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_SaleContractSalaryWageSheetReportRow this[int index] {
                get {
                    return ((TBL_SaleContractSalaryWageSheetReportRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_SaleContractSalaryWageSheetReportRowChangeEventHandler TBL_SaleContractSalaryWageSheetReportRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_SaleContractSalaryWageSheetReportRowChangeEventHandler TBL_SaleContractSalaryWageSheetReportRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_SaleContractSalaryWageSheetReportRowChangeEventHandler TBL_SaleContractSalaryWageSheetReportRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_SaleContractSalaryWageSheetReportRowChangeEventHandler TBL_SaleContractSalaryWageSheetReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTBL_SaleContractSalaryWageSheetReportRow(TBL_SaleContractSalaryWageSheetReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_SaleContractSalaryWageSheetReportRow AddTBL_SaleContractSalaryWageSheetReportRow(
                        string SaleContractEmployeeMasterName, 
                        decimal ActualBasicAmount, 
                        decimal ActualDA, 
                        decimal ActualHRA, 
                        decimal ActualConveyance, 
                        decimal ActualEducation, 
                        decimal ActualWashing, 
                        decimal ActualGrossAmount, 
                        decimal DaysInMonth, 
                        decimal TotalWeeklyOffDays, 
                        decimal AbsentDays, 
                        decimal TotalAttendance, 
                        decimal AdjustedBasicAmount, 
                        decimal EDA, 
                        decimal EHRA, 
                        decimal EConveyance, 
                        decimal EEducation, 
                        decimal ESICGrossAmount, 
                        decimal EWashing, 
                        decimal Bonus, 
                        decimal LWW, 
                        decimal GrossForESICCal, 
                        decimal EPF, 
                        decimal EESIC, 
                        decimal Canteen, 
                        decimal PT, 
                        decimal TotalDeduction, 
                        decimal NetAmount, 
                        decimal OTRate, 
                        decimal SingleOvertimeHours, 
                        decimal DoubleOvertimeHours, 
                        decimal GrossOTWages, 
                        decimal NetOTWagesPayable, 
                        decimal TotalWagesPaybleBeforeDeduction, 
                        decimal EmployerPF, 
                        decimal EmployerESIC, 
                        decimal Insurance, 
                        decimal MLWF, 
                        decimal UAS, 
                        decimal TotalSalary, 
                        decimal ServiceCharges, 
                        decimal MobileCharges, 
                        decimal GrandTotal, 
                        decimal ManagementFees) {
                TBL_SaleContractSalaryWageSheetReportRow rowTBL_SaleContractSalaryWageSheetReportRow = ((TBL_SaleContractSalaryWageSheetReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SaleContractEmployeeMasterName,
                        ActualBasicAmount,
                        ActualDA,
                        ActualHRA,
                        ActualConveyance,
                        ActualEducation,
                        ActualWashing,
                        ActualGrossAmount,
                        DaysInMonth,
                        TotalWeeklyOffDays,
                        AbsentDays,
                        TotalAttendance,
                        AdjustedBasicAmount,
                        EDA,
                        EHRA,
                        EConveyance,
                        EEducation,
                        ESICGrossAmount,
                        EWashing,
                        Bonus,
                        LWW,
                        GrossForESICCal,
                        EPF,
                        EESIC,
                        Canteen,
                        PT,
                        TotalDeduction,
                        NetAmount,
                        OTRate,
                        SingleOvertimeHours,
                        DoubleOvertimeHours,
                        GrossOTWages,
                        NetOTWagesPayable,
                        TotalWagesPaybleBeforeDeduction,
                        EmployerPF,
                        EmployerESIC,
                        Insurance,
                        MLWF,
                        UAS,
                        TotalSalary,
                        ServiceCharges,
                        MobileCharges,
                        GrandTotal,
                        ManagementFees};
                rowTBL_SaleContractSalaryWageSheetReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBL_SaleContractSalaryWageSheetReportRow);
                return rowTBL_SaleContractSalaryWageSheetReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TBL_SaleContractSalaryWageSheetReportDataTable cln = ((TBL_SaleContractSalaryWageSheetReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBL_SaleContractSalaryWageSheetReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnSaleContractEmployeeMasterName = base.Columns["SaleContractEmployeeMasterName"];
                this.columnActualBasicAmount = base.Columns["ActualBasicAmount"];
                this.columnActualDA = base.Columns["ActualDA"];
                this.columnActualHRA = base.Columns["ActualHRA"];
                this.columnActualConveyance = base.Columns["ActualConveyance"];
                this.columnActualEducation = base.Columns["ActualEducation"];
                this.columnActualWashing = base.Columns["ActualWashing"];
                this.columnActualGrossAmount = base.Columns["ActualGrossAmount"];
                this.columnDaysInMonth = base.Columns["DaysInMonth"];
                this.columnTotalWeeklyOffDays = base.Columns["TotalWeeklyOffDays"];
                this.columnAbsentDays = base.Columns["AbsentDays"];
                this.columnTotalAttendance = base.Columns["TotalAttendance"];
                this.columnAdjustedBasicAmount = base.Columns["AdjustedBasicAmount"];
                this.columnEDA = base.Columns["EDA"];
                this.columnEHRA = base.Columns["EHRA"];
                this.columnEConveyance = base.Columns["EConveyance"];
                this.columnEEducation = base.Columns["EEducation"];
                this.columnESICGrossAmount = base.Columns["ESICGrossAmount"];
                this.columnEWashing = base.Columns["EWashing"];
                this.columnBonus = base.Columns["Bonus"];
                this.columnLWW = base.Columns["LWW"];
                this.columnGrossForESICCal = base.Columns["GrossForESICCal"];
                this.columnEPF = base.Columns["EPF"];
                this.columnEESIC = base.Columns["EESIC"];
                this.columnCanteen = base.Columns["Canteen"];
                this.columnPT = base.Columns["PT"];
                this.columnTotalDeduction = base.Columns["TotalDeduction"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnOTRate = base.Columns["OTRate"];
                this.columnSingleOvertimeHours = base.Columns["SingleOvertimeHours"];
                this.columnDoubleOvertimeHours = base.Columns["DoubleOvertimeHours"];
                this.columnGrossOTWages = base.Columns["GrossOTWages"];
                this.columnNetOTWagesPayable = base.Columns["NetOTWagesPayable"];
                this.columnTotalWagesPaybleBeforeDeduction = base.Columns["TotalWagesPaybleBeforeDeduction"];
                this.columnEmployerPF = base.Columns["EmployerPF"];
                this.columnEmployerESIC = base.Columns["EmployerESIC"];
                this.columnInsurance = base.Columns["Insurance"];
                this.columnMLWF = base.Columns["MLWF"];
                this.columnUAS = base.Columns["UAS"];
                this.columnTotalSalary = base.Columns["TotalSalary"];
                this.columnServiceCharges = base.Columns["ServiceCharges"];
                this.columnMobileCharges = base.Columns["MobileCharges"];
                this.columnGrandTotal = base.Columns["GrandTotal"];
                this.columnManagementFees = base.Columns["ManagementFees"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnSaleContractEmployeeMasterName = new global::System.Data.DataColumn("SaleContractEmployeeMasterName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleContractEmployeeMasterName);
                this.columnActualBasicAmount = new global::System.Data.DataColumn("ActualBasicAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualBasicAmount);
                this.columnActualDA = new global::System.Data.DataColumn("ActualDA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualDA);
                this.columnActualHRA = new global::System.Data.DataColumn("ActualHRA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualHRA);
                this.columnActualConveyance = new global::System.Data.DataColumn("ActualConveyance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualConveyance);
                this.columnActualEducation = new global::System.Data.DataColumn("ActualEducation", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualEducation);
                this.columnActualWashing = new global::System.Data.DataColumn("ActualWashing", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualWashing);
                this.columnActualGrossAmount = new global::System.Data.DataColumn("ActualGrossAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualGrossAmount);
                this.columnDaysInMonth = new global::System.Data.DataColumn("DaysInMonth", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDaysInMonth);
                this.columnTotalWeeklyOffDays = new global::System.Data.DataColumn("TotalWeeklyOffDays", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalWeeklyOffDays);
                this.columnAbsentDays = new global::System.Data.DataColumn("AbsentDays", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbsentDays);
                this.columnTotalAttendance = new global::System.Data.DataColumn("TotalAttendance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAttendance);
                this.columnAdjustedBasicAmount = new global::System.Data.DataColumn("AdjustedBasicAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdjustedBasicAmount);
                this.columnEDA = new global::System.Data.DataColumn("EDA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDA);
                this.columnEHRA = new global::System.Data.DataColumn("EHRA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEHRA);
                this.columnEConveyance = new global::System.Data.DataColumn("EConveyance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEConveyance);
                this.columnEEducation = new global::System.Data.DataColumn("EEducation", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEEducation);
                this.columnESICGrossAmount = new global::System.Data.DataColumn("ESICGrossAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESICGrossAmount);
                this.columnEWashing = new global::System.Data.DataColumn("EWashing", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEWashing);
                this.columnBonus = new global::System.Data.DataColumn("Bonus", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBonus);
                this.columnLWW = new global::System.Data.DataColumn("LWW", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLWW);
                this.columnGrossForESICCal = new global::System.Data.DataColumn("GrossForESICCal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossForESICCal);
                this.columnEPF = new global::System.Data.DataColumn("EPF", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPF);
                this.columnEESIC = new global::System.Data.DataColumn("EESIC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEESIC);
                this.columnCanteen = new global::System.Data.DataColumn("Canteen", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCanteen);
                this.columnPT = new global::System.Data.DataColumn("PT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPT);
                this.columnTotalDeduction = new global::System.Data.DataColumn("TotalDeduction", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalDeduction);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnOTRate = new global::System.Data.DataColumn("OTRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTRate);
                this.columnSingleOvertimeHours = new global::System.Data.DataColumn("SingleOvertimeHours", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSingleOvertimeHours);
                this.columnDoubleOvertimeHours = new global::System.Data.DataColumn("DoubleOvertimeHours", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoubleOvertimeHours);
                this.columnGrossOTWages = new global::System.Data.DataColumn("GrossOTWages", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossOTWages);
                this.columnNetOTWagesPayable = new global::System.Data.DataColumn("NetOTWagesPayable", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetOTWagesPayable);
                this.columnTotalWagesPaybleBeforeDeduction = new global::System.Data.DataColumn("TotalWagesPaybleBeforeDeduction", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalWagesPaybleBeforeDeduction);
                this.columnEmployerPF = new global::System.Data.DataColumn("EmployerPF", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployerPF);
                this.columnEmployerESIC = new global::System.Data.DataColumn("EmployerESIC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployerESIC);
                this.columnInsurance = new global::System.Data.DataColumn("Insurance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsurance);
                this.columnMLWF = new global::System.Data.DataColumn("MLWF", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMLWF);
                this.columnUAS = new global::System.Data.DataColumn("UAS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUAS);
                this.columnTotalSalary = new global::System.Data.DataColumn("TotalSalary", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalSalary);
                this.columnServiceCharges = new global::System.Data.DataColumn("ServiceCharges", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceCharges);
                this.columnMobileCharges = new global::System.Data.DataColumn("MobileCharges", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobileCharges);
                this.columnGrandTotal = new global::System.Data.DataColumn("GrandTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrandTotal);
                this.columnManagementFees = new global::System.Data.DataColumn("ManagementFees", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManagementFees);
                this.columnSaleContractEmployeeMasterName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_SaleContractSalaryWageSheetReportRow NewTBL_SaleContractSalaryWageSheetReportRow() {
                return ((TBL_SaleContractSalaryWageSheetReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBL_SaleContractSalaryWageSheetReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TBL_SaleContractSalaryWageSheetReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBL_SaleContractSalaryWageSheetReportRowChanged != null)) {
                    this.TBL_SaleContractSalaryWageSheetReportRowChanged(this, new TBL_SaleContractSalaryWageSheetReportRowChangeEvent(((TBL_SaleContractSalaryWageSheetReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBL_SaleContractSalaryWageSheetReportRowChanging != null)) {
                    this.TBL_SaleContractSalaryWageSheetReportRowChanging(this, new TBL_SaleContractSalaryWageSheetReportRowChangeEvent(((TBL_SaleContractSalaryWageSheetReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBL_SaleContractSalaryWageSheetReportRowDeleted != null)) {
                    this.TBL_SaleContractSalaryWageSheetReportRowDeleted(this, new TBL_SaleContractSalaryWageSheetReportRowChangeEvent(((TBL_SaleContractSalaryWageSheetReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBL_SaleContractSalaryWageSheetReportRowDeleting != null)) {
                    this.TBL_SaleContractSalaryWageSheetReportRowDeleting(this, new TBL_SaleContractSalaryWageSheetReportRowChangeEvent(((TBL_SaleContractSalaryWageSheetReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTBL_SaleContractSalaryWageSheetReportRow(TBL_SaleContractSalaryWageSheetReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SaleContractSalaryWageSheetReportDataSet ds = new SaleContractSalaryWageSheetReportDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBL_SaleContractSalaryWageSheetReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TBL_SaleContractSalaryWageSheetReportRow : global::System.Data.DataRow {
            
            private TBL_SaleContractSalaryWageSheetReportDataTable tableTBL_SaleContractSalaryWageSheetReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_SaleContractSalaryWageSheetReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBL_SaleContractSalaryWageSheetReport = ((TBL_SaleContractSalaryWageSheetReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SaleContractEmployeeMasterName {
                get {
                    try {
                        return ((string)(this[this.tableTBL_SaleContractSalaryWageSheetReport.SaleContractEmployeeMasterNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleContractEmployeeMasterName\' in table \'TBL_SaleContractS" +
                                "alaryWageSheetReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.SaleContractEmployeeMasterNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ActualBasicAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.ActualBasicAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualBasicAmount\' in table \'TBL_SaleContractSalaryWageShee" +
                                "tReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.ActualBasicAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ActualDA {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.ActualDAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualDA\' in table \'TBL_SaleContractSalaryWageSheetReport\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.ActualDAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ActualHRA {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.ActualHRAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualHRA\' in table \'TBL_SaleContractSalaryWageSheetReport\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.ActualHRAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ActualConveyance {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.ActualConveyanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualConveyance\' in table \'TBL_SaleContractSalaryWageSheet" +
                                "Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.ActualConveyanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ActualEducation {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.ActualEducationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualEducation\' in table \'TBL_SaleContractSalaryWageSheetR" +
                                "eport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.ActualEducationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ActualWashing {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.ActualWashingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualWashing\' in table \'TBL_SaleContractSalaryWageSheetRep" +
                                "ort\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.ActualWashingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ActualGrossAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.ActualGrossAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualGrossAmount\' in table \'TBL_SaleContractSalaryWageShee" +
                                "tReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.ActualGrossAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal DaysInMonth {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.DaysInMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DaysInMonth\' in table \'TBL_SaleContractSalaryWageSheetRepor" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.DaysInMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TotalWeeklyOffDays {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.TotalWeeklyOffDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalWeeklyOffDays\' in table \'TBL_SaleContractSalaryWageShe" +
                                "etReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.TotalWeeklyOffDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AbsentDays {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.AbsentDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AbsentDays\' in table \'TBL_SaleContractSalaryWageSheetReport" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.AbsentDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TotalAttendance {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.TotalAttendanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAttendance\' in table \'TBL_SaleContractSalaryWageSheetR" +
                                "eport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.TotalAttendanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AdjustedBasicAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.AdjustedBasicAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdjustedBasicAmount\' in table \'TBL_SaleContractSalaryWageSh" +
                                "eetReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.AdjustedBasicAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EDA {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.EDAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EDA\' in table \'TBL_SaleContractSalaryWageSheetReport\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.EDAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EHRA {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.EHRAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EHRA\' in table \'TBL_SaleContractSalaryWageSheetReport\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.EHRAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EConveyance {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.EConveyanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EConveyance\' in table \'TBL_SaleContractSalaryWageSheetRepor" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.EConveyanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EEducation {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.EEducationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EEducation\' in table \'TBL_SaleContractSalaryWageSheetReport" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.EEducationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ESICGrossAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.ESICGrossAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ESICGrossAmount\' in table \'TBL_SaleContractSalaryWageSheetR" +
                                "eport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.ESICGrossAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EWashing {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.EWashingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EWashing\' in table \'TBL_SaleContractSalaryWageSheetReport\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.EWashingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Bonus {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.BonusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bonus\' in table \'TBL_SaleContractSalaryWageSheetReport\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.BonusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal LWW {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.LWWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LWW\' in table \'TBL_SaleContractSalaryWageSheetReport\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.LWWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal GrossForESICCal {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.GrossForESICCalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrossForESICCal\' in table \'TBL_SaleContractSalaryWageSheetR" +
                                "eport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.GrossForESICCalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EPF {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.EPFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EPF\' in table \'TBL_SaleContractSalaryWageSheetReport\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.EPFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EESIC {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.EESICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EESIC\' in table \'TBL_SaleContractSalaryWageSheetReport\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.EESICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Canteen {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.CanteenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Canteen\' in table \'TBL_SaleContractSalaryWageSheetReport\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.CanteenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PT {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.PTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PT\' in table \'TBL_SaleContractSalaryWageSheetReport\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.PTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TotalDeduction {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.TotalDeductionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalDeduction\' in table \'TBL_SaleContractSalaryWageSheetRe" +
                                "port\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.TotalDeductionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'TBL_SaleContractSalaryWageSheetReport\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal OTRate {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.OTRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OTRate\' in table \'TBL_SaleContractSalaryWageSheetReport\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.OTRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal SingleOvertimeHours {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.SingleOvertimeHoursColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SingleOvertimeHours\' in table \'TBL_SaleContractSalaryWageSh" +
                                "eetReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.SingleOvertimeHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal DoubleOvertimeHours {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.DoubleOvertimeHoursColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DoubleOvertimeHours\' in table \'TBL_SaleContractSalaryWageSh" +
                                "eetReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.DoubleOvertimeHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal GrossOTWages {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.GrossOTWagesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrossOTWages\' in table \'TBL_SaleContractSalaryWageSheetRepo" +
                                "rt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.GrossOTWagesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NetOTWagesPayable {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.NetOTWagesPayableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetOTWagesPayable\' in table \'TBL_SaleContractSalaryWageShee" +
                                "tReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.NetOTWagesPayableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TotalWagesPaybleBeforeDeduction {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.TotalWagesPaybleBeforeDeductionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalWagesPaybleBeforeDeduction\' in table \'TBL_SaleContract" +
                                "SalaryWageSheetReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.TotalWagesPaybleBeforeDeductionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EmployerPF {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.EmployerPFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployerPF\' in table \'TBL_SaleContractSalaryWageSheetReport" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.EmployerPFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EmployerESIC {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.EmployerESICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployerESIC\' in table \'TBL_SaleContractSalaryWageSheetRepo" +
                                "rt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.EmployerESICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Insurance {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.InsuranceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Insurance\' in table \'TBL_SaleContractSalaryWageSheetReport\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.InsuranceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MLWF {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.MLWFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MLWF\' in table \'TBL_SaleContractSalaryWageSheetReport\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.MLWFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal UAS {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.UASColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UAS\' in table \'TBL_SaleContractSalaryWageSheetReport\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.UASColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TotalSalary {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.TotalSalaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalSalary\' in table \'TBL_SaleContractSalaryWageSheetRepor" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.TotalSalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ServiceCharges {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.ServiceChargesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceCharges\' in table \'TBL_SaleContractSalaryWageSheetRe" +
                                "port\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.ServiceChargesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MobileCharges {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.MobileChargesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MobileCharges\' in table \'TBL_SaleContractSalaryWageSheetRep" +
                                "ort\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.MobileChargesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal GrandTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.GrandTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrandTotal\' in table \'TBL_SaleContractSalaryWageSheetReport" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.GrandTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ManagementFees {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_SaleContractSalaryWageSheetReport.ManagementFeesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManagementFees\' in table \'TBL_SaleContractSalaryWageSheetRe" +
                                "port\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SaleContractSalaryWageSheetReport.ManagementFeesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSaleContractEmployeeMasterNameNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.SaleContractEmployeeMasterNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSaleContractEmployeeMasterNameNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.SaleContractEmployeeMasterNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsActualBasicAmountNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.ActualBasicAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetActualBasicAmountNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.ActualBasicAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsActualDANull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.ActualDAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetActualDANull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.ActualDAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsActualHRANull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.ActualHRAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetActualHRANull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.ActualHRAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsActualConveyanceNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.ActualConveyanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetActualConveyanceNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.ActualConveyanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsActualEducationNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.ActualEducationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetActualEducationNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.ActualEducationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsActualWashingNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.ActualWashingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetActualWashingNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.ActualWashingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsActualGrossAmountNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.ActualGrossAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetActualGrossAmountNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.ActualGrossAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDaysInMonthNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.DaysInMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDaysInMonthNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.DaysInMonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTotalWeeklyOffDaysNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.TotalWeeklyOffDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTotalWeeklyOffDaysNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.TotalWeeklyOffDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAbsentDaysNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.AbsentDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAbsentDaysNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.AbsentDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTotalAttendanceNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.TotalAttendanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTotalAttendanceNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.TotalAttendanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAdjustedBasicAmountNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.AdjustedBasicAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAdjustedBasicAmountNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.AdjustedBasicAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEDANull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.EDAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEDANull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.EDAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEHRANull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.EHRAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEHRANull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.EHRAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEConveyanceNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.EConveyanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEConveyanceNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.EConveyanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEEducationNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.EEducationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEEducationNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.EEducationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsESICGrossAmountNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.ESICGrossAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetESICGrossAmountNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.ESICGrossAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEWashingNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.EWashingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEWashingNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.EWashingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBonusNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.BonusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBonusNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.BonusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLWWNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.LWWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLWWNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.LWWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGrossForESICCalNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.GrossForESICCalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGrossForESICCalNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.GrossForESICCalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEPFNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.EPFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEPFNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.EPFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEESICNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.EESICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEESICNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.EESICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCanteenNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.CanteenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCanteenNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.CanteenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPTNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.PTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPTNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.PTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTotalDeductionNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.TotalDeductionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTotalDeductionNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.TotalDeductionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNetAmountNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOTRateNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.OTRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOTRateNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.OTRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSingleOvertimeHoursNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.SingleOvertimeHoursColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSingleOvertimeHoursNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.SingleOvertimeHoursColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDoubleOvertimeHoursNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.DoubleOvertimeHoursColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDoubleOvertimeHoursNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.DoubleOvertimeHoursColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGrossOTWagesNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.GrossOTWagesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGrossOTWagesNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.GrossOTWagesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNetOTWagesPayableNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.NetOTWagesPayableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNetOTWagesPayableNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.NetOTWagesPayableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTotalWagesPaybleBeforeDeductionNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.TotalWagesPaybleBeforeDeductionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTotalWagesPaybleBeforeDeductionNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.TotalWagesPaybleBeforeDeductionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEmployerPFNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.EmployerPFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEmployerPFNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.EmployerPFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEmployerESICNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.EmployerESICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEmployerESICNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.EmployerESICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInsuranceNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.InsuranceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInsuranceNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.InsuranceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMLWFNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.MLWFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMLWFNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.MLWFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUASNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.UASColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUASNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.UASColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTotalSalaryNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.TotalSalaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTotalSalaryNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.TotalSalaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsServiceChargesNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.ServiceChargesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetServiceChargesNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.ServiceChargesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMobileChargesNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.MobileChargesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMobileChargesNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.MobileChargesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGrandTotalNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.GrandTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGrandTotalNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.GrandTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsManagementFeesNull() {
                return this.IsNull(this.tableTBL_SaleContractSalaryWageSheetReport.ManagementFeesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetManagementFeesNull() {
                this[this.tableTBL_SaleContractSalaryWageSheetReport.ManagementFeesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TBL_SaleContractSalaryWageSheetReportRowChangeEvent : global::System.EventArgs {
            
            private TBL_SaleContractSalaryWageSheetReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_SaleContractSalaryWageSheetReportRowChangeEvent(TBL_SaleContractSalaryWageSheetReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_SaleContractSalaryWageSheetReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace AERP.Web.UI.SaleContractSalaryWageSheetReportDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBL_SaleContractSalaryWageSheetReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TBL_SaleContractSalaryWageSheetReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBL_SaleContractSalaryWageSheetReport";
            tableMapping.ColumnMappings.Add("SaleContractEmployeeMasterName", "SaleContractEmployeeMasterName");
            tableMapping.ColumnMappings.Add("ActualBasicAmount", "ActualBasicAmount");
            tableMapping.ColumnMappings.Add("ActualDA", "ActualDA");
            tableMapping.ColumnMappings.Add("ActualHRA", "ActualHRA");
            tableMapping.ColumnMappings.Add("ActualConveyance", "ActualConveyance");
            tableMapping.ColumnMappings.Add("ActualEducation", "ActualEducation");
            tableMapping.ColumnMappings.Add("ActualWashing", "ActualWashing");
            tableMapping.ColumnMappings.Add("ActualGrossAmount", "ActualGrossAmount");
            tableMapping.ColumnMappings.Add("DaysInMonth", "DaysInMonth");
            tableMapping.ColumnMappings.Add("TotalWeeklyOffDays", "TotalWeeklyOffDays");
            tableMapping.ColumnMappings.Add("AbsentDays", "AbsentDays");
            tableMapping.ColumnMappings.Add("TotalAttendance", "TotalAttendance");
            tableMapping.ColumnMappings.Add("AdjustedBasicAmount", "AdjustedBasicAmount");
            tableMapping.ColumnMappings.Add("EDA", "EDA");
            tableMapping.ColumnMappings.Add("EHRA", "EHRA");
            tableMapping.ColumnMappings.Add("EConveyance", "EConveyance");
            tableMapping.ColumnMappings.Add("EEducation", "EEducation");
            tableMapping.ColumnMappings.Add("ESICGrossAmount", "ESICGrossAmount");
            tableMapping.ColumnMappings.Add("EWashing", "EWashing");
            tableMapping.ColumnMappings.Add("Bonus", "Bonus");
            tableMapping.ColumnMappings.Add("LWW", "LWW");
            tableMapping.ColumnMappings.Add("GrossForESICCal", "GrossForESICCal");
            tableMapping.ColumnMappings.Add("EPF", "EPF");
            tableMapping.ColumnMappings.Add("EESIC", "EESIC");
            tableMapping.ColumnMappings.Add("Canteen", "Canteen");
            tableMapping.ColumnMappings.Add("PT", "PT");
            tableMapping.ColumnMappings.Add("TotalDeduction", "TotalDeduction");
            tableMapping.ColumnMappings.Add("NetAmount", "NetAmount");
            tableMapping.ColumnMappings.Add("OTRate", "OTRate");
            tableMapping.ColumnMappings.Add("SingleOvertimeHours", "SingleOvertimeHours");
            tableMapping.ColumnMappings.Add("DoubleOvertimeHours", "DoubleOvertimeHours");
            tableMapping.ColumnMappings.Add("GrossOTWages", "GrossOTWages");
            tableMapping.ColumnMappings.Add("NetOTWagesPayable", "NetOTWagesPayable");
            tableMapping.ColumnMappings.Add("TotalWagesPaybleBeforeDeduction", "TotalWagesPaybleBeforeDeduction");
            tableMapping.ColumnMappings.Add("EmployerPF", "EmployerPF");
            tableMapping.ColumnMappings.Add("EmployerESIC", "EmployerESIC");
            tableMapping.ColumnMappings.Add("Insurance", "Insurance");
            tableMapping.ColumnMappings.Add("MLWF", "MLWF");
            tableMapping.ColumnMappings.Add("UAS", "UAS");
            tableMapping.ColumnMappings.Add("TotalSalary", "TotalSalary");
            tableMapping.ColumnMappings.Add("ServiceCharges", "ServiceCharges");
            tableMapping.ColumnMappings.Add("MobileCharges", "MobileCharges");
            tableMapping.ColumnMappings.Add("GrandTotal", "GrandTotal");
            tableMapping.ColumnMappings.Add("ManagementFees", "ManagementFees");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TBL_SaleContractSalaryWageSheetReport] ([SaleContractEmployeeMasterName], [ActualBasicAmount], [ActualDA], [ActualHRA], [ActualConveyance], [ActualEducation], [ActualWashing], [ActualGrossAmount], [DaysInMonth], [TotalWeeklyOffDays], [AbsentDays], [TotalAttendance], [AdjustedBasicAmount], [EDA], [EHRA], [EConveyance], [EEducation], [ESICGrossAmount], [EWashing], [Bonus], [LWW], [GrossForESICCal], [EPF], [EESIC], [Canteen], [PT], [TotalDeduction], [NetAmount], [OTRate], [SingleOvertimeHours], [DoubleOvertimeHours], [GrossOTWages], [NetOTWagesPayable], [TotalWagesPaybleBeforeDeduction], [EmployerPF], [EmployerESIC], [Insurance], [MLWF], [UAS], [TotalSalary], [ServiceCharges], [MobileCharges], [GrandTotal], [ManagementFees]) VALUES (@SaleContractEmployeeMasterName, @ActualBasicAmount, @ActualDA, @ActualHRA, @ActualConveyance, @ActualEducation, @ActualWashing, @ActualGrossAmount, @DaysInMonth, @TotalWeeklyOffDays, @AbsentDays, @TotalAttendance, @AdjustedBasicAmount, @EDA, @EHRA, @EConveyance, @EEducation, @ESICGrossAmount, @EWashing, @Bonus, @LWW, @GrossForESICCal, @EPF, @EESIC, @Canteen, @PT, @TotalDeduction, @NetAmount, @OTRate, @SingleOvertimeHours, @DoubleOvertimeHours, @GrossOTWages, @NetOTWagesPayable, @TotalWagesPaybleBeforeDeduction, @EmployerPF, @EmployerESIC, @Insurance, @MLWF, @UAS, @TotalSalary, @ServiceCharges, @MobileCharges, @GrandTotal, @ManagementFees)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SaleContractEmployeeMasterName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SaleContractEmployeeMasterName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActualBasicAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ActualBasicAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActualDA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ActualDA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActualHRA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ActualHRA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActualConveyance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ActualConveyance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActualEducation", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ActualEducation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActualWashing", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ActualWashing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActualGrossAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ActualGrossAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DaysInMonth", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "DaysInMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalWeeklyOffDays", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TotalWeeklyOffDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AbsentDays", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "AbsentDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalAttendance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TotalAttendance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdjustedBasicAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "AdjustedBasicAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "EDA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EHRA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "EHRA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EConveyance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "EConveyance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EEducation", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "EEducation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESICGrossAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ESICGrossAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EWashing", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "EWashing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bonus", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Bonus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LWW", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "LWW", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GrossForESICCal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "GrossForESICCal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPF", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "EPF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EESIC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "EESIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Canteen", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Canteen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "PT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalDeduction", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TotalDeduction", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NetAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "NetAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "OTRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SingleOvertimeHours", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "SingleOvertimeHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DoubleOvertimeHours", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "DoubleOvertimeHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GrossOTWages", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "GrossOTWages", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NetOTWagesPayable", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "NetOTWagesPayable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalWagesPaybleBeforeDeduction", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TotalWagesPaybleBeforeDeduction", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployerPF", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "EmployerPF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployerESIC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "EmployerESIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Insurance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Insurance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MLWF", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "MLWF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UAS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "UAS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalSalary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TotalSalary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServiceCharges", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ServiceCharges", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MobileCharges", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "MobileCharges", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GrandTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "GrandTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ManagementFees", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ManagementFees", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DELL;Initial Catalog=ErpDB;Persist Security Info=True;User ID=sa;Pass" +
                "word=P@$$w0rd";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT SaleContractEmployeeMasterName, ActualBasicAmount, ActualDA, ActualHRA, ActualConveyance, ActualEducation, ActualWashing, ActualGrossAmount, DaysInMonth, TotalWeeklyOffDays, AbsentDays, TotalAttendance, AdjustedBasicAmount, EDA, EHRA, EConveyance, EEducation, ESICGrossAmount, EWashing, Bonus, LWW, GrossForESICCal, EPF, EESIC, Canteen, PT, TotalDeduction, NetAmount, OTRate, SingleOvertimeHours, DoubleOvertimeHours, GrossOTWages, NetOTWagesPayable, TotalWagesPaybleBeforeDeduction, EmployerPF, EmployerESIC, Insurance, MLWF, UAS, TotalSalary, ServiceCharges, MobileCharges, GrandTotal, ManagementFees FROM dbo.TBL_SaleContractSalaryWageSheetReport";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SaleContractSalaryWageSheetReportDataSet.TBL_SaleContractSalaryWageSheetReportDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SaleContractSalaryWageSheetReportDataSet.TBL_SaleContractSalaryWageSheetReportDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SaleContractSalaryWageSheetReportDataSet.TBL_SaleContractSalaryWageSheetReportDataTable dataTable = new SaleContractSalaryWageSheetReportDataSet.TBL_SaleContractSalaryWageSheetReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SaleContractSalaryWageSheetReportDataSet.TBL_SaleContractSalaryWageSheetReportDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SaleContractSalaryWageSheetReportDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TBL_SaleContractSalaryWageSheetReport");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string SaleContractEmployeeMasterName, 
                    global::System.Nullable<decimal> ActualBasicAmount, 
                    global::System.Nullable<decimal> ActualDA, 
                    global::System.Nullable<decimal> ActualHRA, 
                    global::System.Nullable<decimal> ActualConveyance, 
                    global::System.Nullable<decimal> ActualEducation, 
                    global::System.Nullable<decimal> ActualWashing, 
                    global::System.Nullable<decimal> ActualGrossAmount, 
                    global::System.Nullable<decimal> DaysInMonth, 
                    global::System.Nullable<decimal> TotalWeeklyOffDays, 
                    global::System.Nullable<decimal> AbsentDays, 
                    global::System.Nullable<decimal> TotalAttendance, 
                    global::System.Nullable<decimal> AdjustedBasicAmount, 
                    global::System.Nullable<decimal> EDA, 
                    global::System.Nullable<decimal> EHRA, 
                    global::System.Nullable<decimal> EConveyance, 
                    global::System.Nullable<decimal> EEducation, 
                    global::System.Nullable<decimal> ESICGrossAmount, 
                    global::System.Nullable<decimal> EWashing, 
                    global::System.Nullable<decimal> Bonus, 
                    global::System.Nullable<decimal> LWW, 
                    global::System.Nullable<decimal> GrossForESICCal, 
                    global::System.Nullable<decimal> EPF, 
                    global::System.Nullable<decimal> EESIC, 
                    global::System.Nullable<decimal> Canteen, 
                    global::System.Nullable<decimal> PT, 
                    global::System.Nullable<decimal> TotalDeduction, 
                    global::System.Nullable<decimal> NetAmount, 
                    global::System.Nullable<decimal> OTRate, 
                    global::System.Nullable<decimal> SingleOvertimeHours, 
                    global::System.Nullable<decimal> DoubleOvertimeHours, 
                    global::System.Nullable<decimal> GrossOTWages, 
                    global::System.Nullable<decimal> NetOTWagesPayable, 
                    global::System.Nullable<decimal> TotalWagesPaybleBeforeDeduction, 
                    global::System.Nullable<decimal> EmployerPF, 
                    global::System.Nullable<decimal> EmployerESIC, 
                    global::System.Nullable<decimal> Insurance, 
                    global::System.Nullable<decimal> MLWF, 
                    global::System.Nullable<decimal> UAS, 
                    global::System.Nullable<decimal> TotalSalary, 
                    global::System.Nullable<decimal> ServiceCharges, 
                    global::System.Nullable<decimal> MobileCharges, 
                    global::System.Nullable<decimal> GrandTotal, 
                    global::System.Nullable<decimal> ManagementFees) {
            if ((SaleContractEmployeeMasterName == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SaleContractEmployeeMasterName));
            }
            if ((ActualBasicAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(ActualBasicAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ActualDA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(ActualDA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ActualHRA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(ActualHRA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ActualConveyance.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(ActualConveyance.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ActualEducation.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(ActualEducation.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ActualWashing.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(ActualWashing.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ActualGrossAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(ActualGrossAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((DaysInMonth.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(DaysInMonth.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((TotalWeeklyOffDays.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(TotalWeeklyOffDays.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((AbsentDays.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(AbsentDays.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((TotalAttendance.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(TotalAttendance.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((AdjustedBasicAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(AdjustedBasicAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((EDA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(EDA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((EHRA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(EHRA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((EConveyance.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(EConveyance.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((EEducation.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(EEducation.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((ESICGrossAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(ESICGrossAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((EWashing.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(EWashing.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Bonus.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(Bonus.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((LWW.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(LWW.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((GrossForESICCal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(GrossForESICCal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((EPF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(EPF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((EESIC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(EESIC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Canteen.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(Canteen.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((PT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(PT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((TotalDeduction.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(TotalDeduction.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((NetAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(NetAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((OTRate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(OTRate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((SingleOvertimeHours.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(SingleOvertimeHours.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((DoubleOvertimeHours.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(DoubleOvertimeHours.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((GrossOTWages.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(GrossOTWages.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((NetOTWagesPayable.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(NetOTWagesPayable.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((TotalWagesPaybleBeforeDeduction.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(TotalWagesPaybleBeforeDeduction.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((EmployerPF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(EmployerPF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((EmployerESIC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((decimal)(EmployerESIC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Insurance.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((decimal)(Insurance.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((MLWF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((decimal)(MLWF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((UAS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((decimal)(UAS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((TotalSalary.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(TotalSalary.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((ServiceCharges.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((decimal)(ServiceCharges.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((MobileCharges.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((decimal)(MobileCharges.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((GrandTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((decimal)(GrandTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((ManagementFees.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((decimal)(ManagementFees.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private TBL_SaleContractSalaryWageSheetReportTableAdapter _tBL_SaleContractSalaryWageSheetReportTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TBL_SaleContractSalaryWageSheetReportTableAdapter TBL_SaleContractSalaryWageSheetReportTableAdapter {
            get {
                return this._tBL_SaleContractSalaryWageSheetReportTableAdapter;
            }
            set {
                this._tBL_SaleContractSalaryWageSheetReportTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tBL_SaleContractSalaryWageSheetReportTableAdapter != null) 
                            && (this._tBL_SaleContractSalaryWageSheetReportTableAdapter.Connection != null))) {
                    return this._tBL_SaleContractSalaryWageSheetReportTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tBL_SaleContractSalaryWageSheetReportTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(SaleContractSalaryWageSheetReportDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tBL_SaleContractSalaryWageSheetReportTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBL_SaleContractSalaryWageSheetReport.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBL_SaleContractSalaryWageSheetReportTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(SaleContractSalaryWageSheetReportDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tBL_SaleContractSalaryWageSheetReportTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBL_SaleContractSalaryWageSheetReport.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBL_SaleContractSalaryWageSheetReportTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(SaleContractSalaryWageSheetReportDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tBL_SaleContractSalaryWageSheetReportTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBL_SaleContractSalaryWageSheetReport.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBL_SaleContractSalaryWageSheetReportTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(SaleContractSalaryWageSheetReportDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tBL_SaleContractSalaryWageSheetReportTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tBL_SaleContractSalaryWageSheetReportTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tBL_SaleContractSalaryWageSheetReportTableAdapter != null)) {
                    revertConnections.Add(this._tBL_SaleContractSalaryWageSheetReportTableAdapter, this._tBL_SaleContractSalaryWageSheetReportTableAdapter.Connection);
                    this._tBL_SaleContractSalaryWageSheetReportTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tBL_SaleContractSalaryWageSheetReportTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tBL_SaleContractSalaryWageSheetReportTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBL_SaleContractSalaryWageSheetReportTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBL_SaleContractSalaryWageSheetReportTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tBL_SaleContractSalaryWageSheetReportTableAdapter != null)) {
                    this._tBL_SaleContractSalaryWageSheetReportTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tBL_SaleContractSalaryWageSheetReportTableAdapter]));
                    this._tBL_SaleContractSalaryWageSheetReportTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591