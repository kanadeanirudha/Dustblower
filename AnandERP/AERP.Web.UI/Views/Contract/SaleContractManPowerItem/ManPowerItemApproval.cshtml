@model AERP.ViewModel.SaleContractManPowerItemViewModel
<style type="text/css">
    .mfp-content {
        width: 90% !important;
    }

    #SalaryRules th, #SelectedRules th {
        font-size: 12px;
    }
</style>
<script src="@Url.Content("~/Scripts/AERP_Scripts/TaskNotification/MPPendingRequest.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Content/Theme/vendors/bower_components/bootstrap-select/dist/css/bootstrap-select.css")" rel="stylesheet" type="text/css" />

<div id="custom-content">
    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;Approve Contract Posts/Man Power Item</h2>
    </div>
    <div class="card">
        <div class="card-body card-padding">

            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <form id="FormCreateSaleContractManPowerItemRules">

                @Html.HiddenFor(m => m.TaskCode)
                @Html.HiddenFor(m => m.TaskNotificationDetailsID)
                @Html.HiddenFor(m => m.TaskNotificationMasterID)
                @Html.HiddenFor(m => m.GeneralTaskReportingDetailsID)
                @Html.HiddenFor(m => m.PersonID)
                @Html.HiddenFor(m => m.StageSequenceNumber)
                @Html.HiddenFor(m => m.IsLastRecord)
                @Html.HiddenFor(m => m.ID)

                <div class="col-sm-12">
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.CustomerMasterID, new { style = "" })
                        <div class="form-group  fg-line">
                            @Model.CustomerMasterName
                        </div>
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.CustomerBranchMasterID, new { style = "" })
                        <div class="form-group  fg-line">
                            @Model.CustomerBranchMasterName
                        </div>
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.DesignationMasterID, new { style = "" })
                        <div class="form-group  fg-line">
                            @Model.DesignationMasterName
                        </div>
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.BasicSalayAmount, new { style = "" })
                        <div class="form-group  fg-line">
                            @Model.BasicSalayAmount
                        </div>
                    </div>
                </div>
                <div class="col-sm-12">
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.BasicSalayAmount, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.BasicSalayAmount, new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.BasicSalayAmount)
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.FixedSalaryAmount, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.FixedSalaryAmount, new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.FixedSalaryAmount)
                    </div>
                </div>
                

                <table id="SelectedRules" class="table table-striped">
                    <thead>
                        <tr>
                            <th>Rule Type</th>
                            <th>Head Name</th>
                            <th>Fixed Amount</th>
                            <th>Percentage</th>
                            <th>Calculated On</th>
                            <th>Calculate On Amount</th>
                            <th>Is Gender Specific</th>
                            <th>Gender</th>
                            <th>Effected Date</th>
                            <th>Range From</th>
                            <th>Range Upto</th>
                            <th>Contributed By</th>
                            <th>Actual Amount</th>
                            @*<th>Action</th>*@
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.SaleContractManPowerItemList)
                        {
                            var CalculateOnValue = item.CalculateOnString.Replace(", ", ",").Split(',');
                            var calOnVal = string.Empty; var calOnText = string.Empty;
                            <tr>
                                <td>
                                    <input type='hidden' value='@item.RuleID' class='SelectedRuleID'>
                                    <input type='hidden' class='SelectedRuleType' value='@item.RuleType'>@item.RuleType
                                </td>
                                <td>
                                    <input type='hidden' class='SelectedHeadID' value='@item.HeadID'>@item.HeadName
                                </td>
                                <td>
                                    <input type='text' class="RuleFixedAmount form-control input-sm" value='@item.FixedAmount'>
                                </td>
                                <td>
                                    <input type='text' class="RulePercentage form-control input-sm" value='@item.Percentage'>
                                </td>
                                <td>
                                    @if (item.CalculateOnString != string.Empty)
                                    {
                                        foreach (var CalOn in CalculateOnValue)
                                        {
                                            var ReferenceID = CalOn.Split('~');
                                            calOnVal = (calOnVal == string.Empty ? calOnVal : calOnVal + ",") + ReferenceID[0] + "~" + ReferenceID[1] + "~" + ReferenceID[2];
                                            calOnText = (calOnText == string.Empty ? calOnText : calOnText + ", ") + ReferenceID[3];
                                        }
                                    }
                                    <input type='hidden' class='SelectedCalcultedOn' value='@calOnVal'>@calOnText
                                </td>
                                <td>
                                    <input type='text' class="RuleCalculateOnFixedAmount form-control input-sm" value='@item.CalculateOnFixedAmount'>
                                </td>
                                <td>@item.IsGenderSpecific</td>
                                @if (item.Gender == 1)
                                {
                                    <td>Male</td>
                                }
                                else if (item.Gender == 2)
                                {
                                    <td>Female</td>
                                }
                                else if (item.Gender == 3)
                                {
                                    <td>Third Gender</td>
                                }
                                else
                                {
                                    <td></td>
                                }
                                <td></td>
                                <td>@item.RangeFrom</td>
                                <td>@item.RangeUpto</td>

                                @if (item.ContributionType == 1)
                                {
                                    <td>Employee</td>
                                }
                                else if (item.ContributionType == 2)
                                {
                                    <td>Employer</td>
                                }
                                else
                                {
                                    <td></td>
                                }
                                <td>
                                    <input type='hidden' value='@item.HeadType'>
                                    <input type='hidden' class="TotalHeadAmount" value='@item.CalculatedAmount'>
                                    <span class='ActualAmountCalculated'>@item.CalculatedAmount</span>
                                </td>
                                @*<td><input type='button' class='btn btn-primary RemoveRulesToManPowerItem' value='Remove'>*@
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <th colspan="7" style="text-align:right;">Net Amount</th>
                            <th colspan="2">
                                <input type="text" class="form-control" value="@Model.SaleContractManPowerItemList[0].NetSalaryAmount" id="NetSalaryAmount" disabled="disabled" />
                            </th>
                            <th colspan="2" style="text-align:right;">Total Amount</th>
                            <th colspan="2">
                                <input type="text" class="form-control" value="@Model.SaleContractManPowerItemList[0].TotalAmount" id="TotalSalaryAmount" disabled="disabled" />
                                <input type="hidden" class="form-control" value="@Model.SaleContractManPowerItemList[0].GrossSalaryAmount" id="GrossSalaryAmount" disabled="disabled" />
                            </th>
                            @*<th></th>*@
                        </tr>
                    </tfoot>
                </table>
                <div class="col-sm-12 m-t-15">
                    <div class="col-sm-3" style="display:none;">
                        <div class="form-group  fg-line">
                            @Html.LabelFor(model => model.CalculateArrears, new { style = "" })
                            <div class="checkbox">
                                <label>
                                    @if (Model.CalculateArrears == true)
                                    {
                                        <input type="checkbox" value="" id="CalculateArrears" checked>
                                    }
                                    else
                                    {
                                        <input type="checkbox" value="" id="CalculateArrears">
                                    }
                                    <i class="input-helper"></i>

                                </label>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.CalculateArrears)
                    </div>
                    <div class="col-sm-3" style="display:none;">
                        <div class="form-group  fg-line">
                            @Html.LabelFor(model => model.GenerateSeperateInvoice, new { style = "" })
                            <div class="checkbox">
                                <label>
                                    @if (Model.GenerateSeperateInvoice == true)
                                    {
                                        <input type="checkbox" value="" id="GenerateSeperateInvoice" checked>
                                    }
                                    else
                                    {
                                        <input type="checkbox" value="" id="GenerateSeperateInvoice">
                                    }
                                    <i class="input-helper"></i>

                                </label>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.GenerateSeperateInvoice)
                    </div>
                    <div class="col-sm-3">
                        @Html.LabelFor(model => model.WithEffectiveFromDate, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.WithEffectiveFromDate, new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.WithEffectiveFromDate)
                    </div>
                    <div class="col-sm-3">
                        @Html.LabelFor(model => model.WithEffectiveUptoDate, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.WithEffectiveUptoDate, new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.WithEffectiveUptoDate)
                    </div>
                </div>
                <div class="col-sm-12">
                    <div class="form-group fg-line">
                        <select id="SelectedStatus" class="form-control input-sm" style="width:120px">
                            <option value="2">Approved</option>
                            <option value="3">Reject</option>
                        </select>
                    </div>
                </div>

                <div class="widget-bottom">
                    <div style="padding-right: 10px; padding-top: 5px; padding-bottom: 0px; text-align: right;">
                        <button type="button" id="CreateApprovedManPowerItem" class="btn btn-primary">@Resources.ButtonAction_Submit</button>
                    </div>
                </div>
            </form>

        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        MPPendingRequest.Initialize();
    })

</script>

