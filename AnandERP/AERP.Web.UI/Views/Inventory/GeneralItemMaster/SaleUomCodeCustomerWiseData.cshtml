@model AERP.ViewModel.GeneralItemMasterViewModel
<input type="hidden" id="TaskCode" value="GeneralItemCustomerSalesData" />
@Html.HiddenFor(model => model.GeneralItemMasterID)
@Html.HiddenFor(model => model.TaskCode)
@Html.HiddenFor(model => model.GeneralItemCodeID)
@Html.HiddenFor(model => model.InventoryItemCodeUnitLevelSpecificInfoID)


<div id="custom-content">
    <div class="card">
        <div class="card-body card-padding">
            <form id="FormCreateInventoryUoMGroupAndDetail" role="form" class="row">
                
                <div class="row col-sm-12">
                    <div class="col-sm-2">
                        <div class="form-group fg-line">
                            Location
                            @Html.DropDownListFor(model => model.GeneralUnitsID, (SelectList)ViewBag.LocationList, "--Select Location--", new { @class = "form-control input-sm" })
                        </div>
                    </div>
                    <div class="col-sm-2">
                        <div class="form-group fg-line">
                            Sale UOM Code
                            @Html.DropDownListFor(model => model.UomCode, (SelectList)ViewBag.UOMList, "--Select UOM--", new { @class = "form-control input-sm" })
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group fg-line">
                            Customer
                            @Html.HiddenFor(m => m.CustomerMasterId)
                            @Html.HiddenFor(m => m.CustomerType)
                            @Html.TextBoxFor(model => model.CustomerName, new { @class = "form-control input-sm " })
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group fg-line">
                            Customer Branch
                            @Html.HiddenFor(m => m.CustomerBranchMasterId)
                            @Html.TextBoxFor(model => model.CustomerBranchName, new { @class = "form-control input-sm typeahead" })
                        </div>
                    </div>
                    
                </div>
                <div class="col-sm-12 row">
                    <div class="col-sm-3" style="">
                        <div class="form-group fg-line">
                            Sale Price
                            @Html.TextBoxFor(model => model.SalePrice, new { maxlength = "8", @class = "form-control input-sm " })
                        </div>
                    </div>
                    <div class="col-sm-1" id="btnAdd1" style="">
                        <button type="button" title="Add row" class="btn bgm-cyan btn-float waves-effect waves-circle waves-float" id="btnCreateCustomerSaleRate"><i class="zmdi zmdi-plus"></i></button>
                    </div>
                    <div class="col-sm-1" id="btnAdd1" style="">
                        <button type="button" title="Clear row" class="btn bgm-cyan btn-float waves-effect waves-circle waves-float" id="btnClearCustomerSaleRateRow"><i class="zmdi zmdi-close"></i></button>
                    </div>
                </div>
                <div class="col-sm-12 row">
                    <div id="" class="table-responsive">
                        <div id="DivAddRowTableCustomer">
                            <table id="CustomerSaleUoMDetailstblData" class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Store</th>
                                        <th>Location</th>
                                        <th>Sale Uom Code</th>
                                        <th>Customer</th>
                                        <th>Branch</th>
                                        <th>Price</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.GeneralItemMasterListForSaleData.Count > 0)
                                    {
                                        foreach (var item in Model.GeneralItemMasterListForSaleData)
                                        {
                                            <tr>

                                                <td>@item.CentreCode</td>
                                                <td>@item.UnitName<input type="text" id="GeneralUnitsID" style="display:none" value="@item.GeneralUnitsID"></td>
                                                <td style="display:none"><input type="text" id="InventoryItemCodeUnitLevelCustomerSpecificInfoID" style="display:none" value="@item.InventoryItemCodeUnitLevelCustomerSpecificInfoID"></td>
                                                
                                                <td style="display:none" id="ItemNumber"><input type="text" style="display:none" value="@item.ItemNumber"></td>
                                                <td>@item.UomCode<input type="text" style="display:none" value="@item.UomCode"></td>
                                                <td>@item.CustomerName<input type="text" style="display:none" id="CustomerMasterIdEdit" value="@item.CustomerMasterId"></td>
                                                <td>@item.CustomerBranchName<input type="text" style="display:none" id="CustomerBranchMasterIdEdit" value="@item.CustomerBranchMasterId"></td>
                                                <td>
                                                    <div class="form-group fg-line">
                                                        <input type="text" class="form-control" id="SalePriceEdit" disabled value="@Math.Round(item.SalePrice,2)" maxlength="8" />
                                                        <input type="text" style="display:none;" id="SalePriceEditOri" value="@Math.Round(item.SalePrice,2)" maxlength="8" />
                                                    </div>
                                                </td>
                                                <td>
                                                    @if (item.ApprovalStatus == 1)
                                                    {
                                                        <span class="btn btn-xs btn-primary">In Approval</span>
                                                    }
                                                    else if (item.ApprovalStatus == 2 || item.ApprovalStatus == 0)
                                                    {
                                                        <a href="javascript:void(0);" data-toggle="tooltip" class="btn btn-success waves-effect" title="Approved"><span class="zmdi zmdi-check-all waves-effect"></span></a>
                                                        <a href="javascript:void(0);" data-toggle="tooltip" class="btn waves-effect rowSave" title="Save" style="display:none;"><span class="zmdi zmdi-check waves-effect"></span></a>
                                                        <a href="javascript:void(0);" data-toggle="tooltip" class="btn waves-effect rowClose" title="Cancel" style="display:none;"><span class="zmdi zmdi-close waves-effect"></span></a>
                                                        <a href="javascript:void(0);" data-toggle="tooltip" class="btn waves-effect rowEdit" title="Edit"><span class="zmdi zmdi-edit waves-effect"></span></a>
                                                        <a href="javascript:void(0);" data-toggle="tooltip" class="btn waves-effect rowDelete" title="Delete"><span class="zmdi zmdi-delete waves-effect"></span></a>
                                                    }
                                                    else
                                                    {
                                                        <a href="javascript:void(0);" data-toggle="tooltip" class="btn btn-danger waves-effect" title="Rejected"><span class="zmdi zmdi-layers-off waves-effect"></span></a>
                                                        <a href="javascript:void(0);" data-toggle="tooltip" class="btn waves-effect rowSave" title="Save" style="display:none;"><span class="zmdi zmdi-check waves-effect"></span></a>
                                                        <a href="javascript:void(0);" data-toggle="tooltip" class="btn waves-effect rowClose" title="Cancel" style="display:none;"><span class="zmdi zmdi-close waves-effect"></span></a>
                                                        <a href="javascript:void(0);" data-toggle="tooltip" class="btn waves-effect rowEdit" title="Edit"><span class="zmdi zmdi-edit waves-effect"></span></a>
                                                        <a href="javascript:void(0);" data-toggle="tooltip" class="btn waves-effect rowDelete" title="Delete"><span class="zmdi zmdi-delete waves-effect"></span></a>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    }
                                    
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </form>
        </div>

    </div>
</div>

<script src="@Url.Content("~/Scripts/jquery.validate.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        GeneralItemMaster.Initialize();

        $(".rowEdit").unbind('click').click(function () {
            $(this).parent().parent('tr').find('.rowEdit').hide();
            $(this).parent().parent('tr').find('.rowDelete').hide();
            $(this).parent().parent('tr').find('.rowSave').show();
            $(this).parent().parent('tr').find('.rowClose').show();
            $(this).parent().parent('tr').find('#SalePriceEdit').prop('disabled', false);
        })
        $(".rowClose").unbind('click').click(function () {
            $(this).parent().parent('tr').find('.rowSave').hide();
            $(this).parent().parent('tr').find('.rowClose').hide();
            $(this).parent().parent('tr').find('.rowEdit').show();
            $(this).parent().parent('tr').find('.rowDelete').show();
            $(this).parent().parent('tr').find('#SalePriceEdit').prop('disabled', true);
            $(this).parent().parent('tr').find('#SalePriceEdit').val($(this).parent().parent('tr').find('#SalePriceEditOri').val());
        })
        $(".rowSave").unbind('click').click(function () {
            var data = {
            }
            data.InventoryItemCodeUnitLevelCustomerSpecificInfoID = $(this).parent().parent('tr').find("#InventoryItemCodeUnitLevelCustomerSpecificInfoID").val();
            data.SalePrice = $(this).parent().parent('tr').find("#SalePriceEdit").val();
            data.GeneralUnitsID = $(this).parent().parent('tr').find("#GeneralUnitsID").val();

            if (data.SalePrice == 0 || data.SalePrice == "") {
                notify("Please Enter Sale Price", "warning");
                return false;
            }

            $.ajax({
                url: "/GeneralItemMaster/CreateGeneralItemCustomerSalesData",
                type: "POST",
                data: data,
                dataType: 'json',
                success: function (data) {
                    $("#GeneralItemCustomerSalesData").click();
                    var splitData = data.split(',');
                    notify(splitData[0], splitData[1]);
                },
                error: function (er) {
                    alert(er.error);
                }
            });
        })

        $(".rowDelete").unbind('click').click(function () {
            var InventoryItemCodeUnitLevelCustomerSpecificInfoID = $(this).parent().parent('tr').find("#InventoryItemCodeUnitLevelCustomerSpecificInfoID").val();
            swal({
                title: 'Delete Rate',
                text: 'Do you want to delete Customer Rate?',
                type: 'error',
                showCancelButton: true,
                confirmButtonClass: 'btn-danger',
                confirmButtonText: 'Yes!'
            }, function (isConfirm) {
                if (isConfirm) {
                    var actionUrl = '/GeneralItemMaster/DeleteGeneralItemCustomerSalesData?ID=' + InventoryItemCodeUnitLevelCustomerSpecificInfoID;
                    ///window.location.href=actionUrl;

                    $.ajax({
                        //beforeSend:function (XMLHttpRequest) {$("."+loader).fadeIn();}, 
                        //complete:function (XMLHttpRequest, textStatus) {$("."+loader).fadeOut();}, 
                        dataType: "json",
                        success: function (data, textStatus) {
                            $("#GeneralItemCustomerSalesData").click();
                            var splitData = data.split(',');
                            notify(splitData[0], splitData[1]);
                        },
                        url: actionUrl
                    });
                    return false;
                }
            });
        })

        $("#btnCreateCustomerSaleRate").click(function () {
            var data = {
            }
            data.GeneralUnitsID = $("#GeneralUnitsID").val();
            data.UomCode = $("#UomCode").val();
            data.CustomerMasterId = $("#CustomerMasterId").val();
            data.CustomerBranchMasterId = $("#CustomerBranchMasterId").val();
            data.SalePrice = $("#SalePrice").val();
            data.ItemNumber = $("#ItemNumber").val();

            if (data.GeneralUnitsID == 0 || data.GeneralUnitsID == "") {
                notify("Please select Location", "warning");
                return false;
            }
            if (data.UomCode == 0 || data.UomCode == "") {
                notify("Please select UOM", "warning");
                return false;
            }
            if (data.CustomerMasterId == 0 || data.CustomerMasterId == "") {
                notify("Please select Customer", "warning");
                return false;
            }
            if (data.SalePrice == 0 || data.SalePrice == "") {
                notify("Please Enter Sale Price", "warning");
                return false;
            }

            $.ajax({
                url: "/GeneralItemMaster/CreateGeneralItemCustomerSalesData",
                type: "POST",
                data: data,
                dataType: 'json',
                success: function (data) {
                    $("#GeneralItemCustomerSalesData").click();
                    var splitData = data.split(',');
                    notify(splitData[0], splitData[1]);
                },
                error: function (er) {
                    alert(er.error);
                }
            });
        })

        $("#btnClearCustomerSaleRateRow").click(function () {
            
            $("#GeneralUnitsID").val("");
            $("#UomCode").val("");
            $("#SalePrice").val("");
            $('#CustomerName').typeahead('val', '');
            $("#CustomerName").val("");
            $("#CustomerMasterId").val("");
            $('#CustomerBranchName').typeahead('val', '');
            $("#CustomerBranchMasterId").val("0");
            $("#CustomerBranchName").val("");
        })

        mapCustomerMasterName = [];
        var getDataCustomerMasterName = function () {
            return function findMatches(q, cb) {

                var matches, substringRegex;

                // an array that will be populated with substring matches
                matches = [];

                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');

                $.ajax({
                    url: "/CustomerMaster/GetCustomerMasterSearchList",
                    type: "POST",
                    data: { term: q },
                    dataType: "json",
                    success: function (data) {

                        // iterate through the pool of strings and for any string that
                        // contains the substring `q`, add it to the `matches` array
                        //alert(data);
                        //console.log(data);
                        $.each(data, function (i, response) {

                            if (substrRegex.test(response.CustomerMasterName)) {
                                mapCustomerMasterName[response.CustomerMasterName] = response;
                                matches.push(response.CustomerMasterName);

                            }

                        });

                    },
                    async: false
                })
                cb(matches);
            };

        };

        $("#CustomerName").typeahead({
            hint: true,
            highlight: false,
            minLength: 1
        }, {
            source: getDataCustomerMasterName()
        }).on("typeahead:selected", function (obj, item) {
            $("#CustomerMasterId").val(mapCustomerMasterName[item].CustomerMasterID);
            $("#CustomerName").val(mapCustomerMasterName[item].CustomerMasterName);
            $("#CustomerType").val(mapCustomerMasterName[item].CustomerType);

            if (mapCustomerMasterName[item].CustomerType == 1) {
                $("#CustomerBranchMasterId").val("0");
                $("#CustomerBranchName").val("");
                $("#CustomerBranchName").prop("disabled", true);
            } else {
                $("#CustomerBranchName").prop("disabled", false);
            }

        });

        mapCustomerBranchMasterName = [];
        var getDataCustomerBranchMasterName = function () {
            return function findMatches(q, cb) {

                var matches, substringRegex;

                // an array that will be populated with substring matches
                matches = [];

                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');

                $.ajax({
                    url: "/CustomerMaster/GetCustomerBranchMasterSearchList",
                    type: "POST",
                    data: { term: q, CustomerMasterID: $("#CustomerMasterId").val() },
                    dataType: "json",
                    success: function (data) {

                        // iterate through the pool of strings and for any string that
                        // contains the substring `q`, add it to the `matches` array
                        //alert(data);
                        //console.log(data);
                        $.each(data, function (i, response) {

                            if (substrRegex.test(response.CustomerBranchMasterName)) {
                                mapCustomerBranchMasterName[response.CustomerBranchMasterName] = response;
                                matches.push(response.CustomerBranchMasterName);

                            }

                        });

                    },
                    async: false
                })
                cb(matches);
            };

        };

        $("#CustomerBranchName").typeahead({
            hint: true,
            highlight: false,
            minLength: 1
        }, {
            source: getDataCustomerBranchMasterName()
        }).on("typeahead:selected", function (obj, item) {
            $("#CustomerBranchMasterId").val(mapCustomerBranchMasterName[item].CustomerBranchMasterID);
            $("#CustomerBranchName").val(mapCustomerBranchMasterName[item].CustomerBranchMasterName);
        });

        $('#CustomerName').on("keydown", function (e) {
            if (e.keyCode == 8 || e.keyCode == 46) {

                $('#CustomerName').typeahead('val', '');
                $("#CustomerName").val("");
                $("#CustomerMasterId").val("");
                $('#CustomerBranchName').typeahead('val', '');
                $("#CustomerBranchMasterId").val("0");
                $("#CustomerBranchName").val("");
            }
        });
        $('#CustomerBranchName').on("keydown", function (e) {

            if ($("#CustomerMasterId").val() == "0" && e.keyCode != 9) {
                notify("Please Select Customer", "warning");
                return false;
            }
            if ($("#CustomerMasterId").val() != "0" && $("#CustomerType").val() == "1" && e.keyCode != 9) {
                return false;
            }

            if (e.keyCode == 8 || e.keyCode == 46) {

                $('#CustomerBranchName').typeahead('val', '');
                $("#CustomerBranchName").val("");
                $("#CustomerBranchMasterId").val("0");
            }
        });
    });
</script>

